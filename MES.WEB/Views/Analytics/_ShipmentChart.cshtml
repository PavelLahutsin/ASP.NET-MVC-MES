@using System.Globalization
@model IEnumerable<MES.WEB.Models.ShipmentChartVm>


<div class="box external-event">
    <div class="box-header with-border">
        <h3 class="box-title">Отгрузки</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <div id="container" width="742" height="286">
                <canvas id="shipmentChart"></canvas>
            </div>

        </div>
    </div>
</div>





<script>
    var ctx = document.getElementById("shipmentChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Encode(Model.Where(w=>w.ProducName== "6500").Select(x=> x.Date.ToString("MMMM", new CultureInfo("ru-RU"))))),
            datasets: [{
                            label: '5200-01',
                data: @Html.Raw(Json.Encode(Model.Where(w=>w.ProducName== "5200-01").Select(x=>x.Quantity))),

                            backgroundColor: "red",
                            borderColor: "red",
                fill: false

            },
            {
                            label: '6500',
                data: @Html.Raw(Json.Encode(Model.Where(w=>w.ProducName== "6500").Select(x=>x.Quantity))),
                borderColor: "green",
                backgroundColor: "green",
                fill: false

                },
            {
                            label: '5200',
                data: @Html.Raw(Json.Encode(Model.Where(w=>w.ProducName== "5200").Select(x=>x.Quantity))),
                borderColor: "blue",
                backgroundColor: "blue",
                fill: false

            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true


                    }
            }]
            }

        }
    });
</script>
  
